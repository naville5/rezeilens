[
  {
    "ContainingType": "RezilensMVP.Api.Controllers.AuthenticationController",
    "Method": "Login",
    "RelativePath": "api/Authentication/login",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "model",
        "Type": "RezilensMVP.Api.Models.LoginModel",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "RezilensMVP.Api.Controllers.DashboardController",
    "Method": "GetDashboardStats",
    "RelativePath": "api/Dashboard/get-stats",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "RezilensMVP.Api.Controllers.HealthController",
    "Method": "Get",
    "RelativePath": "api/Health",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "RezilensMVP.Api.Controllers.PolicyController",
    "Method": "AcknowledgePolicy",
    "RelativePath": "api/Policy/acknowledge-policy",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "request",
        "Type": "RezilensMVP.Api.Controllers.AcknowledgePolicyRequest",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "RezilensMVP.Api.Controllers.PolicyController",
    "Method": "CreatePolicy",
    "RelativePath": "api/Policy/create-policy",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "model",
        "Type": "RezilensMVP.Api.Models.PolicyDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "RezilensMVP.Api.Controllers.PolicyController",
    "Method": "GetPolicies",
    "RelativePath": "api/Policy/get-policies",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "RezilensMVP.Api.Controllers.PolicyController",
    "Method": "GetPoliciesForUser",
    "RelativePath": "api/Policy/get-policies-for-user",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "RezilensMVP.Api.Controllers.PolicyController",
    "Method": "GetPolicyById",
    "RelativePath": "api/Policy/get-policy/{id}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Guid",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "RezilensMVP.Api.Controllers.PolicyController",
    "Method": "PublishPolicy",
    "RelativePath": "api/Policy/publish-policy",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "model",
        "Type": "RezilensMVP.Api.Controllers.PublishPolicyDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "RezilensMVP.Api.Controllers.PolicyController",
    "Method": "UpdatePolicy",
    "RelativePath": "api/Policy/update-policy",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "request",
        "Type": "RezilensMVP.Api.Models.UpdatePolicyRequest",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "RezilensMVP.Api.Controllers.ReportsController",
    "Method": "GetPoliciesWithExceptionsAndAcknowledgements",
    "RelativePath": "api/Reports/GetPoliciesWithExceptionsAndAcknowledgements",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "RezilensMVP.Api.Controllers.RiskExceptionController",
    "Method": "GetAllRiskExceptions",
    "RelativePath": "api/RiskException/all-risk-exceptions",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "RezilensMVP.Api.Controllers.RiskExceptionController",
    "Method": "GetPublishedPoliciesForException",
    "RelativePath": "api/RiskException/published-policies-for-exception",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "RezilensMVP.Api.Controllers.RiskExceptionController",
    "Method": "SubmitRiskException",
    "RelativePath": "api/RiskException/submit-risk-exception",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "dto",
        "Type": "RezilensMVP.Api.Controllers.SubmitRiskExceptionRequest",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "RezilensMVP.Api.Controllers.RiskExceptionController",
    "Method": "UpdateRiskExceptionStatus",
    "RelativePath": "api/RiskException/update-risk-exception-status",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "request",
        "Type": "RezilensMVP.Api.Controllers.UpdateRiskExceptionStatusRequest",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Program\u002B\u003C\u003Ec",
    "Method": "\u003C\u003CMain\u003E$\u003Eb__0_6",
    "RelativePath": "weatherforecast",
    "HttpMethod": "GET",
    "IsController": false,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "WeatherForecast[]",
        "MediaTypes": [
          "application/json"
        ],
        "StatusCode": 200
      }
    ],
    "EndpointName": "GetWeatherForecast"
  }
]